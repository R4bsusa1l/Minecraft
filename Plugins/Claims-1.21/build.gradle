plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'ch.grafando'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
}

tasks.named('build'){
    dependsOn(tasks.jar)
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
}

jar {
    destinationDirectory.set(file("pluginsJar"))
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'ch.grafando'
            artifactId = 'claims'
            version = '1.0'
            from components.java
            pom {
                name = 'Claims'
                description = 'claim identifying algorithm for minecraft server'
                url = 'http://www.grafando.ch/repo'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'grafando'
                        name = 'Silas Baur'
                        email = 'silasbaur0@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["silasbaur0@gmail.com"]
                password = project.properties["C4ss1opeia!12"]
            }
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
